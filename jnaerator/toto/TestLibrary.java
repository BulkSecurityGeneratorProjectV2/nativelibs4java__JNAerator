package toto;
import org.bridj.BridJ;
import org.bridj.CRuntime;
import org.bridj.ann.Library;
import org.bridj.ann.Runtime;
/**
 * Wrapper for library <b>test</b><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("test") 
@Runtime(CRuntime.class) 
public class TestLibrary {
	static {
		BridJ.register();
	}
	/**
	 * Conversion Error : std::vsnprintf(__out, __size, __fmt, __args)<br>
	 * SKIPPED:<br>
	 * <i>native declaration : /usr/include/c++/4.2.1/bits/c++locale.h:1038</i><br>
	 * const int __ret = std::vsnprintf(__out, __size, __fmt, __args);
	 */
	/// Conversion Error : null (void type !)
	public int getdate_err() {
		try {
			return (int)BridJ.getNativeLibrary("test").getSymbolPointer("getdate_err").as(int.class).get();
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	public TestLibrary getdate_err(int getdate_err) {
		try {
			{
				BridJ.getNativeLibrary("test").getSymbolPointer("getdate_err").as(int.class).set(getdate_err);
				return this;
			}
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	public int daylight() {
		try {
			return (int)BridJ.getNativeLibrary("test").getSymbolPointer("daylight").as(int.class).get();
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
	public TestLibrary daylight(int daylight) {
		try {
			{
				BridJ.getNativeLibrary("test").getSymbolPointer("daylight").as(int.class).set(daylight);
				return this;
			}
		}catch (Throwable $ex$) {
			throw new RuntimeException($ex$);
		}
	}
}
