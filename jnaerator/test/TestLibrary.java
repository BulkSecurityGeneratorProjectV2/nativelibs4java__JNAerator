package test;
import org.bridj.BridJ;
import org.bridj.CRuntime;
import org.bridj.Pointer;
import org.bridj.ann.Library;
import org.bridj.ann.Runtime;
/**
 * Wrapper for library <b>test</b><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("test") 
@Runtime(CRuntime.class) 
public class TestLibrary {
	static {
		BridJ.register();
	}
	public static native TestLibrary.time_t time2posix(TestLibrary.time_t time_t1);
	public static native TestLibrary.time_t timelocal(Pointer<TestLibrary.tm > tmPtr1);
	public static native TestLibrary.time_t timegm(Pointer<TestLibrary.tm > tmPtr1);
	public static native void f(int a);
	/// Undefined type
	public static interface tm {
		
	};
	/// Undefined type
	public static interface time_t {
		
	};
}
